import os

import requests
from loguru import logger
from telebot import types
import telebot
from dotenv import load_dotenv


load_dotenv()
FORM_URL = os.environ.get('FORM_ADS', '')
BOT_TOKEN = os.environ.get('BOT_TOKEN', '5265303223:AAHn68aqrQaw9zThfUXFBQMX5hmgjqoTts')
HOST_URL = os.environ.get('HOST_URL', 'http://127.0.0.1:8000/')
bot = telebot.TeleBot(BOT_TOKEN)


def send_users_data(tlg_update):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ API –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î.
    """
    params = {
        'tlg_id': tlg_update.from_user.id,
        'is_premium': tlg_update.from_user.is_premium,
        'first_name': tlg_update.from_user.first_name,
        'last_name': tlg_update.from_user.last_name,
        'username': tlg_update.from_user.username,
        'language_code': tlg_update.from_user.language_code,
    }
    response = requests.post(f"{HOST_URL}users_data/", data=params)
    if response.status_code == 200:
        logger.success(f'–£—Å–ø–µ—à–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
    else:
        logger.warning(f'–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ —É–¥–∞–ª–∞—Å—å!')


def web_app_keyboard_inline():  # —Å–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å webapp –∫–Ω–æ–ø–∫–æ–π
    keyboard = types.InlineKeyboardMarkup(row_width=1)  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É inline
    web_app = types.WebAppInfo(FORM_URL)  # —Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
    one = types.InlineKeyboardButton(text="üèé–ù–∞—à–∏ —É—Å–ª—É–≥–∏", web_app=web_app)  # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
    keyboard.add(one)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return keyboard  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É


@bot.message_handler(commands=['start'])  # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
def start_fun(message):
    bot.send_message(message.chat.id,
                     'ü§ù–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.\n–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá',
                     parse_mode="Markdown", reply_markup=web_app_keyboard_inline())  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω—É–∂–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    send_users_data(tlg_update=message)



# @bot.message_handler(content_types=["web_app_data"])  # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
# def answer(webAppMes):
#     print(webAppMes)  # –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
#     print(webAppMes.web_app_data.data)  # –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–æ —á—Ç–æ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –±–æ—Ç–∞
#     bot.send_message(webAppMes.chat.id, f"–ø–æ–ª—É—á–∏–ª–∏ –∏–Ω–æ—Ñ—Ä–º–∞—Ü–∏—é –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {webAppMes.web_app_data.data}")
#     # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è


if __name__ == '__main__':
    logger.success(f'–°–¢–ê–†–¢ –ë–û–¢–ê!')
    bot.infinity_polling()

